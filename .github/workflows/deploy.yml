name: Deploy Microservices to ECS

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPO_AUTH: auth-service
  ECR_REPO_USER: user-service

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get AWS Account ID
        shell: bash
        run: |
          echo "ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)" >> "$GITHUB_ENV"

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build Auth Service Docker Image
        run: |
          docker build -t $ECR_REPO_AUTH ./services/auth-service
          docker tag $ECR_REPO_AUTH:latest $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_AUTH:latest

      - name: Push Auth Service to ECR
        run: |
          docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_AUTH:latest

      - name: Build User Service Docker Image
        run: |
          docker build -t $ECR_REPO_USER ./services/user-service
          docker tag $ECR_REPO_USER:latest $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_USER:latest

      - name: Push User Service to ECR
        run: |
          docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_USER:latest

